import serial
import time
import os
import sys

# === –ù–ê–°–¢–†–û–ô–ö–ò ===

tft_path = "/home/orangepi/PDA/stall/displey_pda.tft"
serial_port = "/dev/ttyS5"
baud_rate = 9600  # –∏–ª–∏ 115200

# === –ü–†–û–í–ï–†–ö–ò ===

if not os.path.exists(tft_path):
    print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {tft_path}")
    sys.exit(1)

file_size = os.path.getsize(tft_path)
print(f"üìÑ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size} –±–∞–π—Ç")

# === –û–¢–ö–†–´–í–ê–ï–ú –ü–û–†–¢ ===

try:
    ser = serial.Serial(serial_port, baudrate=baud_rate, timeout=2)
    print(f"‚úÖ –û—Ç–∫—Ä—ã—Ç –ø–æ—Ä—Ç {serial_port} @ {baud_rate} baud")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –ø–æ—Ä—Ç–∞ {serial_port}: {e}")
    sys.exit(1)

# === –û–¢–ö–õ–Æ–ß–ï–ù–ò–ï / –í–ö–õ–Æ–ß–ï–ù–ò–ï –î–ò–°–ü–õ–ï–Ø ===

print("‚ö†Ô∏è –û–¢–ö–õ–Æ–ß–ò–¢–ï –ø–∏—Ç–∞–Ω–∏–µ –¥–∏—Å–ø–ª–µ—è! –ü–æ—Ç–æ–º –Ω–∞–∂–º–∏—Ç–µ Enter.")
input("‚û°Ô∏è –¢–µ–ø–µ—Ä—å –í–ö–õ–Æ–ß–ò –ø–∏—Ç–∞–Ω–∏–µ –¥–∏—Å–ø–ª–µ—è –∏ –Ω–∞–∂–º–∏ Enter...")

# === –ñ–î–Å–ú –ì–û–¢–û–í–ù–û–°–¢–ò ===

while True:
    # –®–∞–≥ 1: –ü–æ—Å—ã–ª–∞–µ–º \xFF\xFF\xFF
    ser.write(b'\xFF\xFF\xFF')
    time.sleep(0.1)

    # –®–∞–≥ 2: "–º–∞–≥–∏—á–µ—Å–∫–∞—è —Å—Ç—Ä–æ–∫–∞"
    ser.write(b'DRAKJHSUYDGBNCJHGJKSHBDN' + b'\xFF\xFF\xFF')
    print("‚û°Ô∏è –û—Ç–ø—Ä–∞–≤–∏–ª '–º–∞–≥–∏—á–µ—Å–∫—É—é —Å—Ç—Ä–æ–∫—É' –¥–ª—è —Å–±—Ä–æ—Å–∞ —Ä–µ–∂–∏–º–∞.")
    time.sleep(0.5)

    # –®–∞–≥ 3: –ü–æ—Å—ã–ª–∞–µ–º connect
    ser.write(b'connect' + b'\xFF\xFF\xFF')
    print("‚û°Ô∏è –û—Ç–ø—Ä–∞–≤–∏–ª 'connect'.")

    # –ñ–¥—ë–º –æ—Ç–≤–µ—Ç
    time.sleep(1)
    response = ser.read(64)
    print(f"‚¨ÖÔ∏è –û—Ç–≤–µ—Ç –¥–∏—Å–ø–ª–µ—è: {response}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ 'comok' –≤ –æ—Ç–≤–µ—Ç–µ
    if b'comok' in response:
        print("‚úÖ –î–∏—Å–ø–ª–µ–π –ì–û–¢–û–í –∫ –ø—Ä–æ—à–∏–≤–∫–µ!")
        break
    else:
        print("üîÑ –î–∏—Å–ø–ª–µ–π –ù–ï –æ—Ç–≤–µ—Ç–∏–ª –Ω–∞ 'connect' ‚Äî –ø–æ–≤—Ç–æ—Ä —á–µ—Ä–µ–∑ 1 —Å–µ–∫...")
        time.sleep(1)

# === –ü–û–°–´–õ–ê–ï–ú –ö–û–ú–ê–ù–î–£ –ü–†–û–®–ò–í–ö–ò ===

cmd = f'whmi-wri {file_size},{baud_rate},0\r'.encode('ascii') + b'\xFF\xFF\xFF'
print(f"‚û°Ô∏è –û—Ç–ø—Ä–∞–≤–ª—è—é –∫–æ–º–∞–Ω–¥—É –ø—Ä–æ—à–∏–≤–∫–∏: {cmd}")
ser.write(cmd)

# –ß–∏—Ç–∞–µ–º –æ—Ç–≤–µ—Ç (–Ω–∞ –∫–æ–º–∞–Ω–¥—É whmi-wri –¥–∏—Å–ø–ª–µ–π –¥–æ–ª–∂–µ–Ω –æ—Ç–≤–µ—Ç–∏—Ç—å 05 00 00 FF FF FF)
time.sleep(1)
response = ser.read(6)
print(f"‚¨ÖÔ∏è –û—Ç–≤–µ—Ç –¥–∏—Å–ø–ª–µ—è –Ω–∞ whmi-wri: {response.hex()}")

if not response.startswith(b'\x05\x00\x00'):
    print("‚ö†Ô∏è –î–∏—Å–ø–ª–µ–π –ù–ï –ì–û–¢–û–í –∫ –ø—Ä–æ—à–∏–≤–∫–µ ‚Äî –û–®–ò–ë–ö–ê!")
    ser.close()
    sys.exit(1)

# === –û–¢–ü–†–ê–í–ö–ê –ü–†–û–®–ò–í–ö–ò ===

print("üì§ –ü–µ—Ä–µ–¥–∞—á–∞ –ø—Ä–æ—à–∏–≤–∫–∏...")
with open(tft_path, 'rb') as f:
    sent = 0
    chunk = f.read(4096)
    while chunk:
        ser.write(chunk)
        sent += len(chunk)
        percent = (sent / file_size) * 100
        print(f"\rüü¢ –ü—Ä–æ–≥—Ä–µ—Å—Å: {percent:.1f}% ({sent}/{file_size} –±–∞–π—Ç)", end="")
        chunk = f.read(4096)

print("\n‚úÖ –ü–†–û–®–ò–í–ö–ê –£–°–ü–ï–®–ù–û –ó–ê–í–ï–†–®–ï–ù–ê!")

# === –ó–ê–ö–†–´–í–ê–ï–ú –ü–û–†–¢ ===

ser.close()
print("‚úÖ –ü–æ—Ä—Ç –∑–∞–∫—Ä—ã—Ç")

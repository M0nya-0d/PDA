import serial
import time
import os
import sys

# === –ù–ê–°–¢–†–û–ô–ö–ò ===

tft_path = "/home/orangepi/PDA/stall/displey_pda.tft"
serial_port = "/dev/ttyS5"
baud_rate = 115200  # –ü–æ Habr —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è 115200 –¥–ª—è –ø—Ä–æ—à–∏–≤–∫–∏

# === –ü–†–û–í–ï–†–ö–ò ===

if not os.path.exists(tft_path):
    print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {tft_path}")
    sys.exit(1)

file_size = os.path.getsize(tft_path)
print(f"üìÑ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size} –±–∞–π—Ç")

# === –û–¢–ö–†–´–í–ê–ï–ú –ü–û–†–¢ ===

try:
    ser = serial.Serial(serial_port, baudrate=baud_rate, timeout=2)
    print(f"‚úÖ –û—Ç–∫—Ä—ã—Ç –ø–æ—Ä—Ç {serial_port} @ {baud_rate} baud")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –ø–æ—Ä—Ç–∞ {serial_port}: {e}")
    sys.exit(1)

# === –û–¢–ö–õ–Æ–ß–ï–ù–ò–ï / –í–ö–õ–Æ–ß–ï–ù–ò–ï –î–ò–°–ü–õ–ï–Ø ===

print("‚ö†Ô∏è –û–¢–ö–õ–Æ–ß–ò–¢–ï –ø–∏—Ç–∞–Ω–∏–µ –¥–∏—Å–ø–ª–µ—è! –ü–æ—Ç–æ–º –Ω–∞–∂–º–∏—Ç–µ Enter.")
input("‚û°Ô∏è –¢–µ–ø–µ—Ä—å –í–ö–õ–Æ–ß–ò –ø–∏—Ç–∞–Ω–∏–µ –¥–∏—Å–ø–ª–µ—è –∏ –Ω–∞–∂–º–∏ Enter...")

# === –ü–†–ï–î–í–ê–†–ò–¢–ï–õ–¨–ù–´–ô –°–ë–†–û–° ===

ser.write(b'\xFF\xFF\xFF')
time.sleep(0.1)
ser.reset_input_buffer()
ser.reset_output_buffer()

# === –¶–ò–ö–õ –û–ñ–ò–î–ê–ù–ò–Ø –ì–û–¢–û–í–ù–û–°–¢–ò ===

while True:
    # 1Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–∞–≥–∏—á–µ—Å–∫—É—é —Å—Ç—Ä–æ–∫—É
    ser.write(b'DRAKJHSUYDGBNCJHGJKSHBDN' + b'\xFF\xFF\xFF')
    print("‚û°Ô∏è –û—Ç–ø—Ä–∞–≤–∏–ª '–º–∞–≥–∏—á–µ—Å–∫—É—é —Å—Ç—Ä–æ–∫—É' –¥–ª—è —Å–±—Ä–æ—Å–∞ —Ä–µ–∂–∏–º–∞.")

    # 2Ô∏è‚É£ –í–ê–ñ–ù–û! –ñ–¥—ë–º 2.0 —Å–µ–∫ (–ø–æ Habr)
    time.sleep(2.0)

    # 3Ô∏è‚É£ –°–±—Ä–æ—Å–∏–º input buffer
    ser.reset_input_buffer()

    # 4Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º connect
    ser.write(b'connect' + b'\xFF\xFF\xFF')
    print("‚û°Ô∏è –û—Ç–ø—Ä–∞–≤–∏–ª 'connect'.")

    # 5Ô∏è‚É£ –ñ–¥—ë–º –æ—Ç–≤–µ—Ç
    time.sleep(1.5)
    response = ser.read(64)
    print(f"‚¨ÖÔ∏è –û—Ç–≤–µ—Ç –¥–∏—Å–ø–ª–µ—è: {response}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ 'comok' –≤ –æ—Ç–≤–µ—Ç–µ
    if b'comok' in response:
        print("‚úÖ –î–∏—Å–ø–ª–µ–π –ì–û–¢–û–í –∫ –ø—Ä–æ—à–∏–≤–∫–µ!")
        break
    else:
        print("üîÑ –î–∏—Å–ø–ª–µ–π –ù–ï –æ—Ç–≤–µ—Ç–∏–ª –Ω–∞ 'connect' ‚Äî –ø–æ–≤—Ç–æ—Ä —á–µ—Ä–µ–∑ 1 —Å–µ–∫...")
        time.sleep(1)

# === –û–¢–ö–õ–Æ–ß–ê–ï–ú –°–û–ù / –î–ò–ú–ú–ï–† ===

print("‚û°Ô∏è –û—Ç–∫–ª—é—á–∞—é —Ä–µ–∂–∏–º —Å–Ω–∞ –∏ –¥–∏–º–º–µ—Ä–∞...")
ser.write(b'sleep=0' + b'\xFF\xFF\xFF')
time.sleep(0.1)
ser.write(b'dims=100' + b'\xFF\xFF\xFF')
time.sleep(0.1)

# === –°–ë–†–ê–°–´–í–ê–ï–ú –ë–£–§–ï–†–´ –ü–ï–†–ï–î –ü–†–û–®–ò–í–ö–û–ô ===

ser.reset_input_buffer()
ser.reset_output_buffer()

# === –ü–û–°–´–õ–ê–ï–ú –ö–û–ú–ê–ù–î–£ –ü–†–û–®–ò–í–ö–ò ===

cmd = f'whmi-wri {file_size},{baud_rate},0'.encode('ascii') + b'\x79\x79\x79' + b'\xFF\xFF\xFF'
print(f"‚û°Ô∏è –û—Ç–ø—Ä–∞–≤–ª—è—é –∫–æ–º–∞–Ω–¥—É –ø—Ä–æ—à–∏–≤–∫–∏: {cmd}")
ser.write(cmd)

# === –û–ñ–ò–î–ê–ï–ú –ë–ê–ô–¢ 0x05 ===

start_time = time.time()
got_ready = False

print("‚è≥ –û–∂–∏–¥–∞–µ–º –æ—Ç–≤–µ—Ç 0x05 –æ—Ç –¥–∏—Å–ø–ª–µ—è (–≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –ø—Ä–æ—à–∏–≤–∫–µ)...")

while time.time() - start_time < 0.5:
    b = ser.read(1)
    if b == b'\x05':
        got_ready = True
        print("‚úÖ –ü–æ–ª—É—á–µ–Ω–æ 0x05 ‚Äî –¥–∏—Å–ø–ª–µ–π –ì–û–¢–û–í –ø—Ä–∏–Ω–∏–º–∞—Ç—å –ø—Ä–æ—à–∏–≤–∫—É!")
        break

if not got_ready:
    print("‚ö†Ô∏è –ù–µ –ø–æ–ª—É—á–∏–ª–∏ 0x05 ‚Äî –¥–∏—Å–ø–ª–µ–π –ù–ï –ì–û–¢–û–í ‚Äî –æ—à–∏–±–∫–∞!")
    ser.close()
    sys.exit(1)

# === –û–¢–ü–†–ê–í–ö–ê –ü–†–û–®–ò–í–ö–ò ===

print("üì§ –ü–µ—Ä–µ–¥–∞—á–∞ –ø—Ä–æ—à–∏–≤–∫–∏...")
with open(tft_path, 'rb') as f:
    sent = 0
    chunk = f.read(4096)
    while chunk:
        ser.write(chunk)
        sent += len(chunk)
        percent = (sent / file_size) * 100
        print(f"\rüü¢ –ü—Ä–æ–≥—Ä–µ—Å—Å: {percent:.1f}% ({sent}/{file_size} –±–∞–π—Ç)", end="")
        chunk = f.read(4096)

print("\n‚úÖ –ü–†–û–®–ò–í–ö–ê –£–°–ü–ï–®–ù–û –ó–ê–í–ï–†–®–ï–ù–ê!")

# === –ó–ê–ö–†–´–í–ê–ï–ú –ü–û–†–¢ ===

ser.close()
print("‚úÖ –ü–æ—Ä—Ç –∑–∞–∫—Ä—ã—Ç")

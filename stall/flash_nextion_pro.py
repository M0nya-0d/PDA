import serial
import time
import os
import sys

# === –ù–ê–°–¢–†–û–ô–ö–ò ===

# –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –ø—Ä–æ—à–∏–≤–∫–∏
tft_path = "/home/orangepi/PDA/stall/displey_pda.tft"

# UART –ø–æ—Ä—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä PH2/PH3 ‚Üí UART5 ‚Üí /dev/ttyS5)
serial_port = "/dev/ttyS5"

# –°–ø–∏—Å–æ–∫ —Å–∫–æ—Ä–æ—Å—Ç–µ–π (–º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∏–µ)
baud_rates = [115200, 9600, 57600]

# === –ü–†–û–í–ï–†–ö–ò ===

if not os.path.exists(tft_path):
    print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {tft_path}")
    sys.exit(1)

file_size = os.path.getsize(tft_path)
print(f"üìÑ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size} –±–∞–π—Ç")

# === –ü–†–û–®–ò–í–ö–ê ===

for baud_rate in baud_rates:
    try:
        print(f"\nüîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ {serial_port} @ {baud_rate} –±–æ–¥...")
        ser = serial.Serial(serial_port, baudrate=baud_rate, timeout=2)

        print("‚ö†Ô∏è –û–¢–ö–õ–Æ–ß–ò–¢–ï –ø–∏—Ç–∞–Ω–∏–µ –¥–∏—Å–ø–ª–µ—è! –ü–æ—Ç–æ–º –Ω–∞–∂–º–∏—Ç–µ Enter.")
        input("‚û°Ô∏è –¢–µ–ø–µ—Ä—å –í–ö–õ–Æ–ß–ò –ø–∏—Ç–∞–Ω–∏–µ –¥–∏—Å–ø–ª–µ—è –∏ –Ω–∞–∂–º–∏ Enter...")

        print("‚è≥ –ñ–¥—É 0.5 —Å–µ–∫ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –¥–∏—Å–ø–ª–µ—è –≤ —Ä–µ–∂–∏–º –ø—Ä–æ—à–∏–≤–∫–∏...")
        time.sleep(0.5)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –ø—Ä–æ—à–∏–≤–∫–∏
        cmd = f'whmi-wri {file_size},{baud_rate},0\r'.encode('ascii') + b'\xFF\xFF\xFF'
        print(f"‚û°Ô∏è –û—Ç–ø—Ä–∞–≤–ª—è—é –∫–æ–º–∞–Ω–¥—É: {cmd}")
        ser.write(cmd)

        # –ñ–¥—ë–º –æ—Ç–≤–µ—Ç –æ—Ç –¥–∏—Å–ø–ª–µ—è
        time.sleep(1)
        response = ser.read(6)

        print(f"‚¨ÖÔ∏è –û—Ç–≤–µ—Ç –¥–∏—Å–ø–ª–µ—è: {response.hex()}")

        if response.startswith(b'\x05\x00\x00'):
            print("‚úÖ –î–∏—Å–ø–ª–µ–π –ì–û–¢–û–í –∫ –ø—Ä–æ—à–∏–≤–∫–µ!")
        else:
            print("‚ö†Ô∏è –î–∏—Å–ø–ª–µ–π –ù–ï –ì–û–¢–û–í –∫ –ø—Ä–æ—à–∏–≤–∫–µ –Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏", baud_rate)
            ser.close()
            continue  # –ü—Ä–æ–±—É–µ–º —Å–ª–µ–¥—É—é—â—É—é —Å–∫–æ—Ä–æ—Å—Ç—å

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º
        print("üì§ –ü–µ—Ä–µ–¥–∞—á–∞ –ø—Ä–æ—à–∏–≤–∫–∏...")
        with open(tft_path, 'rb') as f:
            sent = 0
            chunk = f.read(4096)
            while chunk:
                ser.write(chunk)
                sent += len(chunk)
                percent = (sent / file_size) * 100
                print(f"\rüü¢ –ü—Ä–æ–≥—Ä–µ—Å—Å: {percent:.1f}% ({sent}/{file_size} –±–∞–π—Ç)", end="")
                chunk = f.read(4096)

        print("\n‚úÖ –ü–†–û–®–ò–í–ö–ê –£–°–ü–ï–®–ù–û –ó–ê–í–ï–†–®–ï–ù–ê –Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏", baud_rate)
        ser.close()
        break  # —É—Å–ø–µ—à–Ω–∞—è –ø—Ä–æ—à–∏–≤–∫–∞ ‚Üí –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞

    except serial.SerialException as e:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –ø–æ—Ä—Ç {serial_port} –Ω–∞ {baud_rate} –±–æ–¥: {e}")
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏ {baud_rate}: {e}")

else:
    print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—à–∏—Ç—å –¥–∏—Å–ø–ª–µ–π –Ω–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–∫–æ—Ä–æ—Å—Ç—è—Ö.")
